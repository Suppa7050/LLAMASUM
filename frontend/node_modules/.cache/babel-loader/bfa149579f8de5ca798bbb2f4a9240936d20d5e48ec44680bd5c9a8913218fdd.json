{"ast":null,"code":"var _jsxFileName = \"D:\\\\ps_3\\\\llama2\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// const Home = () =>{\n//     return(\n//         <div>hi hello</div>\n//     );\n// };\n// export default Home;\n\n// import React, { useState } from 'react';\n\n// const Home = () => {\n//   const [elements, setElements] = useState([]);\n\n//   const handleButtonClick = () => {\n//     // Create a new element (you can customize this based on your needs)\n//     const newElement = <div key={elements.length + 1}>New Element</div>;\n\n//     // Update the state to include the new element\n//     setElements([...elements, newElement]);\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleButtonClick}>Add Element</button>\n//       {/* Render the elements from the state */}\n//       {elements}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n// working\n// import React, { useState, useRef } from 'react';\n\n// const Home = () => {\n//   const [files, setFiles] = useState([]);\n//   const fileInputRef = useRef(null);\n\n//   const handleFileChange = (event) => {\n//     const newFile = event.target.files[0];\n//     setFiles([...files, newFile]);\n//   };\n\n//   const handleButtonClick = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleButtonClick}>Add Files</button>\n//       <input\n//         type=\"file\"\n//         ref={fileInputRef}\n//         style={{ display: 'none' }}\n//         onChange={handleFileChange}\n//       />\n//       {files.map((file, index) => (\n//         <div key={index}>{file.name}</div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n// import React, { useState } from 'react';\n\n// const Home = () => {\n//   const [files, setFiles] = useState([]);\n//   const handleButtonClick = () => {\n//     // const newFile = <input type='file' id={`file-${files.length + 1}`} />;\n//     const newFile=document.createElement(\"input\");\n//     newFile.type=\"file\";\n//     newFile.id=`file-${files.length + 1}`;\n//     console.log(newFile);\n//     newFile.click();\n//     newFile.addEventListener('change', (event) => {\n//       const selectedFile = event.target.files[0];\n//       // Now you can work with the selected file\n//       console.log(selectedFile);\n//       setFiles(files.push(selectedFile));\n\n//     });\n//     // console.log(newFile.formTarget.files[0]);\n//     // document.getElementById(`file-${files.length + 1}`).click();\n//     // setFiles([...files,newFile]);\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleButtonClick}>Add Files</button>\n//       {files.map((file) => (\n//         <div>{file}</div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n// import React, { useState } from 'react';\n\n// const Home = () => {\n//   const [files, setFiles] = useState([]);\n//   const handleButtonClick = () => {\n//     // const newFile = <input type='file' id={`file-${files.length + 1}`} />;\n//     const newFile=document.createElement(\"input\");\n//     newFile.type=\"file\";\n//     newFile.id=`file-${files.length + 1}`;\n//     console.log(newFile);\n//     newFile.click();\n//     // console.log(newFile.formTarget.files[0]);\n//     // document.getElementById(`file-${files.length + 1}`).click();\n//     newFile.addEventListener('change', (event) => {\n//       const selectedFile = event.target.files[0];\n//       // Now you can work with the selected file\n//       console.log(files);\n//       files.push(newFile);\n//       console.log(files);\n//       setFiles(files);\n\n//     });\n\n//     // console.log(files)\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={handleButtonClick}>Add Files</button>\n//       {files.map((file) => (\n//         <div>{file.name}</div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleButtonClick = () => {\n    const newFile = document.createElement(\"input\");\n    newFile.type = \"file\";\n    newFile.id = `file-${files.length + 1}`;\n    newFile.addEventListener('change', event => {\n      const selectedFile = event.target.files[0];\n      console.log(selectedFile);\n\n      // Use the functional form of setFiles to ensure you are updating based on the previous state\n      setFiles(prevFiles => [...prevFiles, selectedFile]);\n    });\n    newFile.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"total\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center_div_child\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add_file\",\n            onClick: handleButtonClick,\n            children: \"Add Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file_names_cover\",\n            children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_names\",\n              children: file.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","files","setFiles","handleButtonClick","newFile","document","createElement","type","id","length","addEventListener","event","selectedFile","target","console","log","prevFiles","click","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","name","_c","$RefreshReg$"],"sources":["D:/ps_3/llama2/src/components/Home.js"],"sourcesContent":["// import React from \"react\";\r\n// const Home = () =>{\r\n//     return(\r\n//         <div>hi hello</div>\r\n//     );\r\n// };\r\n// export default Home;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const Home = () => {\r\n//   const [elements, setElements] = useState([]);\r\n\r\n//   const handleButtonClick = () => {\r\n//     // Create a new element (you can customize this based on your needs)\r\n//     const newElement = <div key={elements.length + 1}>New Element</div>;\r\n\r\n//     // Update the state to include the new element\r\n//     setElements([...elements, newElement]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleButtonClick}>Add Element</button>\r\n//       {/* Render the elements from the state */}\r\n//       {elements}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\n\r\n\r\n// working\r\n// import React, { useState, useRef } from 'react';\r\n\r\n// const Home = () => {\r\n//   const [files, setFiles] = useState([]);\r\n//   const fileInputRef = useRef(null);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     const newFile = event.target.files[0];\r\n//     setFiles([...files, newFile]);\r\n//   };\r\n\r\n//   const handleButtonClick = () => {\r\n//     fileInputRef.current.click();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleButtonClick}>Add Files</button>\r\n//       <input\r\n//         type=\"file\"\r\n//         ref={fileInputRef}\r\n//         style={{ display: 'none' }}\r\n//         onChange={handleFileChange}\r\n//       />\r\n//       {files.map((file, index) => (\r\n//         <div key={index}>{file.name}</div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const Home = () => {\r\n//   const [files, setFiles] = useState([]);\r\n//   const handleButtonClick = () => {\r\n//     // const newFile = <input type='file' id={`file-${files.length + 1}`} />;\r\n//     const newFile=document.createElement(\"input\");\r\n//     newFile.type=\"file\";\r\n//     newFile.id=`file-${files.length + 1}`;\r\n//     console.log(newFile);\r\n//     newFile.click();\r\n//     newFile.addEventListener('change', (event) => {\r\n//       const selectedFile = event.target.files[0];\r\n//       // Now you can work with the selected file\r\n//       console.log(selectedFile);\r\n//       setFiles(files.push(selectedFile));\r\n\r\n//     });\r\n//     // console.log(newFile.formTarget.files[0]);\r\n//     // document.getElementById(`file-${files.length + 1}`).click();\r\n//     // setFiles([...files,newFile]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleButtonClick}>Add Files</button>\r\n//       {files.map((file) => (\r\n//         <div>{file}</div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const Home = () => {\r\n//   const [files, setFiles] = useState([]);\r\n//   const handleButtonClick = () => {\r\n//     // const newFile = <input type='file' id={`file-${files.length + 1}`} />;\r\n//     const newFile=document.createElement(\"input\");\r\n//     newFile.type=\"file\";\r\n//     newFile.id=`file-${files.length + 1}`;\r\n//     console.log(newFile);\r\n//     newFile.click();\r\n//     // console.log(newFile.formTarget.files[0]);\r\n//     // document.getElementById(`file-${files.length + 1}`).click();\r\n//     newFile.addEventListener('change', (event) => {\r\n//       const selectedFile = event.target.files[0];\r\n//       // Now you can work with the selected file\r\n//       console.log(files);\r\n//       files.push(newFile);\r\n//       console.log(files);\r\n//       setFiles(files);\r\n\r\n//     });\r\n    \r\n//     // console.log(files)\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={handleButtonClick}>Add Files</button>\r\n//       {files.map((file) => (\r\n//         <div>{file.name}</div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Home = () => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleButtonClick = () => {\r\n    const newFile = document.createElement(\"input\");\r\n    newFile.type = \"file\";\r\n    newFile.id = `file-${files.length + 1}`;\r\n\r\n    newFile.addEventListener('change', (event) => {\r\n      const selectedFile = event.target.files[0];\r\n      console.log(selectedFile);\r\n\r\n      // Use the functional form of setFiles to ensure you are updating based on the previous state\r\n      setFiles(prevFiles => [...prevFiles, selectedFile]);\r\n    });\r\n\r\n    newFile.click();\r\n  };\r\n\r\n  return (\r\n    <div className='total'>\r\n      <form >\r\n        <div className='center_div'>\r\n          <div className='center_div_child'>\r\n            <button className='add_file' onClick={handleButtonClick}>Add Files</button>\r\n            <div className='file_names_cover'>\r\n              {files.map((file, index) => (\r\n                <div className='file_names' key={index}>{file.name}</div>\r\n              ))}\r\n            </div>\r\n            <input type='submit'/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC/CF,OAAO,CAACG,IAAI,GAAG,MAAM;IACrBH,OAAO,CAACI,EAAE,GAAI,QAAOP,KAAK,CAACQ,MAAM,GAAG,CAAE,EAAC;IAEvCL,OAAO,CAACM,gBAAgB,CAAC,QAAQ,EAAGC,KAAK,IAAK;MAC5C,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACZ,KAAK,CAAC,CAAC,CAAC;MAC1Ca,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;;MAEzB;MACAV,QAAQ,CAACc,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEJ,YAAY,CAAC,CAAC;IACrD,CAAC,CAAC;IAEFR,OAAO,CAACa,KAAK,CAAC,CAAC;EACjB,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBrB,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAKoB,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBrB,OAAA;UAAKoB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BrB,OAAA;YAAQoB,SAAS,EAAC,UAAU;YAACE,OAAO,EAAEjB,iBAAkB;YAAAgB,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3E1B,OAAA;YAAKoB,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9BlB,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB7B,OAAA;cAAKoB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAcO,IAAI,CAACE;YAAI,GAAjBD,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkB,CACzD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN1B,OAAA;YAAOS,IAAI,EAAC;UAAQ;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}